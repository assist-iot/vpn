apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api.labels" . | nindent 8 }}
    spec:
      {{- with .Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.enablerNodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not .Values.enablerNodeSelector }}
        {{- with .Values.api.nodeSelector }}
      nodeSelector:
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      # TODO create initContainer to check if MongoDB or LTSE are up
      # initContainers:
      # {{- if .Values.api.envVars.ltse }}
      #   - name: mongodb-liveness-check
      #     image: mongo:latest 
      #     command: ["mongo", "--host", "{{ include "api.databaseHost" . | quote }}:{{ include "api.databasePort" . }}"", "--quiet", "--eval", "db.adminCommand(\"ping\")"]
      # {{- else }}
      #   - name: ltse-liveness-check
      #     image: mongo:latest 
      #     command: ["sh", "-c", "apk add --no-cache curl && until curl {{ .Values.api.envVars.LTSE_URL }}/health; do sleep 2; done"]
      # {{- end }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.api.service.ports.api.containerPort }}
              protocol: {{ .Values.api.service.ports.api.protocol }}
            - name: wireguard
              containerPort: {{ .Values.api.service.ports.wireguard.containerPort }}
              protocol: {{ .Values.api.service.ports.wireguard.protocol }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
            # Values from values.yaml
            - name: API_PORT
              value: {{ .Values.api.service.ports.api.containerPort | quote }}
            - name: WG_PORT
              value: {{ .Values.api.service.ports.wireguard.containerPort | quote }}
            {{- with .Values.api.envVars }}
            - name: SERVER_IP
              value: {{ .serverIP | quote }}
            - name: WG_PRIVATE_KEY
              value: {{ .wgPrivateKey | quote }}
            - name: WG_SUBNET
              value: {{ .wgSubnet | quote }}
            - name: PEER_ALLOWED_IPS
              value: {{ .peerAllowedIPs | quote }}
            - name: LTSE
              value: {{ .ltse | quote }}
            - name: LTSE_URL
              value: {{ .ltseUrl | quote }}
            - name: LTSE_INDEX
              value: {{ .ltseIndex | quote }}
            {{- end }}
            # Values created in _helpers.tpl
            - name: MONGODB_HOST
              value: {{ include "api.databaseHost" . | quote }}
            - name: MONGODB_PORT
              value: {{ include "api.databasePort" . | quote }}
            - name: MONGODB_USER
              value: {{ include "api.databaseUsername" . | quote }}
            - name: MONGODB_PASS
              value: {{ include "api.databasePassword" . | quote }}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_MODULE
            privileged: true
